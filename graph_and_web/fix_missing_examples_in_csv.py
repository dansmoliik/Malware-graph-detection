import sys
from other_functions import error_exit_program, check_if_file_exists, check_if_file_ends_with_ext
import properties

NT_MAX = 30
SLT_MAX = 30
ET_MAX = 30

CSV_NT_I = 5
CSV_SLT_I = 6
CSV_ET_I = 7

LABEL_NORMAL = "Normal"
LABEL_INFECTED = "Infected"


def read_examples_from_file(path_to_file):
    examples = []
    with open(path_to_file, "r") as f:
        first_line = f.readline()
        for line in f:
            examples.append(line.split(','))
    return first_line, examples


def save_examples_to_file(path_to_file, first_line, examples):
    data_str = first_line
    for example in examples:
        data_str += ','.join(example)
    with open(path_to_file, "w") as f:
        f.write(data_str)


def add_mock_examples_where_missing(examples):
    examples_count = len(examples)
    for nt in range(1, NT_MAX+1):
        for slt in range(1, SLT_MAX+1):
            for et in range(1, ET_MAX+1):
                combination_found = False
                for example_i in range(0, examples_count):
                    example = examples[example_i]
                    if example[CSV_NT_I] == str(nt) and example[CSV_SLT_I] == str(slt) and example[CSV_ET_I] == str(et):
                        combination_found = True
                        break
                if not combination_found:
                    file_name = "MOCK_FILE"
                    ip = "1.1.1.1"
                    label1 = LABEL_NORMAL
                    label2 = LABEL_INFECTED
                    fltr = ""
                    f1 = "True"
                    ct = "-1"
                    MostFreqPort = "0"
                    MostFreqPortRatio = "0"
                    MostFreqProto = "MOCK"
                    MostFreqProtoRatio = "0"
                    nodesTotNoF1 = "0"
                    nodesTot = "0"
                    f1Ratio = "0"
                    nodesThr = "0"
                    nodesThrRatio = "0"
                    selfLoop = "0"
                    edgesTotNoF1 = "0"
                    edgesTot = "0"
                    edgesThr = "0"
                    edgesThrRatio = "0"
                    cyclesTot = "0\n"
                    mock_example1 = [file_name, ip, label1, fltr, f1, str(nt), str(slt), str(et), ct, MostFreqPort,
                                     MostFreqPortRatio,
                                     MostFreqProto,
                                     MostFreqProtoRatio, nodesTotNoF1, nodesTot, f1Ratio, nodesThr, nodesThrRatio,
                                     selfLoop, edgesTotNoF1, edgesTot, edgesThr, edgesThrRatio, cyclesTot]
                    mock_example2 = [file_name, ip, label2, fltr, f1, str(nt), str(slt), str(et), ct, MostFreqPort,
                                     MostFreqPortRatio,
                                     MostFreqProto,
                                     MostFreqProtoRatio, nodesTotNoF1, nodesTot, f1Ratio, nodesThr, nodesThrRatio,
                                     selfLoop, edgesTotNoF1, edgesTot, edgesThr, edgesThrRatio, cyclesTot]
                    examples.append(mock_example1)
                    examples.append(mock_example2)
    return examples

if __name__ == '__main__':
    if len(sys.argv) != 2:
        error_exit_program("Need 1 argument: \n"
                           "Path to CSV file.\n")

    path_to_csv_file = sys.argv[1]

    check_if_file_ends_with_ext(path_to_csv_file, properties.STR_CSV_EXT)
    check_if_file_exists(path_to_csv_file)

    first_line, examples = read_examples_from_file(path_to_csv_file)
    examples = add_mock_examples_where_missing(examples)
    save_examples_to_file(path_to_csv_file, first_line, examples)
