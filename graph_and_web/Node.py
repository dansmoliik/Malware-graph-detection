from Edge import Edge


class Node:
    def __init__(self, node_name):
        self.node_name = node_name
        self.edges = {}
        self.count = 0

    def __repr__(self):
        return "Node name: {0}".format(self.node_name)

    def add_new_flow(self, dst_node, flow, count):
        if not dst_node in self.edges:
            self.edges[dst_node] = Edge(dst_node)
        self.edges[dst_node].add_flow(flow, count)

    def next_node_name(self, count):
        for node_name in self.edges:
            if self.edges[node_name].has_next_flow(count):
                return node_name
        return None

    def get_neighbours(self):
        return self.edges.keys()

    def increment_count(self):
        self.count += 1
